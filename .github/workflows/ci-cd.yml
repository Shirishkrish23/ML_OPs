name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 0 * * *" # Daily at midnight

jobs:
  build-and-deploy:
    if: ${{ !contains(github.event.head_commit.message, 'Update model after retraining') }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Set up Git LFS
        run: |
          git lfs install
          git lfs pull

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          pytest

      - name: Build Docker Image
        run: |
          docker build -t shirishkrishna/movie-recommender:${{ github.sha }} .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker Image
        run: |
          docker push shirishkrishna/movie-recommender:${{ github.sha }}
          docker tag shirishkrishna/movie-recommender:${{ github.sha }} shirishkrishna/movie-recommender:latest
          docker push shirishkrishna/movie-recommender:latest

      - name: Deploy to VM using Docker Compose
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VM_IP_ADDRESS }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Install Docker if not installed
            if ! [ -x "$(command -v docker)" ]; then
              curl -fsSL https://get.docker.com -o get-docker.sh
              sh get-docker.sh
              sudo usermod -aG docker $USER
            fi

            # Install Docker Compose if not installed
            if ! [ -x "$(command -v docker-compose)" ]; then
              sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            # Navigate to the app directory
            cd /home/${{ secrets.VM_USERNAME }}

            # Clone or update the repository
            if [ -d "movie-recommender" ]; then
              cd movie-recommender
              git pull origin main
            else
              git clone https://github.com/shirishkrish23/ML_OPs.git movie-recommender
              cd movie-recommender
            fi

            # Set up Git LFS and pull LFS files
            git lfs install
            git lfs pull

            # Update Docker Compose services
            docker-compose pull
            docker-compose up -d

  retrain-model:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: github.event_name == 'schedule'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Retraining Script
        run: |
          python retrain.py

      - name: Commit and Push Updated Model
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Update model after retraining"
          file_pattern: |
            optimized_movie_rating_model.pkl
            title_encoder.pkl

      - name: Build Updated Docker Image
        run: |
          docker build -t shirishkrishna/movie-recommender:${{ github.sha }} .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Updated Docker Image
        run: |
          docker push shirishkrishna/movie-recommender:${{ github.sha }}
          docker tag shirishkrishna/movie-recommender:${{ github.sha }} shirishkrishna/movie-recommender:latest
          docker push shirishkrishna/movie-recommender:latest

      - name: Deploy Updated Model to VM
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VM_IP_ADDRESS }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Navigate to the app directory
            cd /home/${{ secrets.VM_USERNAME }}/movie-recommender

            # Pull the latest code
            git pull origin main

            # Set up Git LFS and pull LFS files
            git lfs install
            git lfs pull

            # Update Docker Compose services
            docker-compose pull
            docker-compose up -d
